#+TITLE:       PostgreSql主从配置
#+AUTHOR:      武向东
#+EMAIL:       izgnod@gmail.com
#+DATE:        2016-06-23 Thu
#+URI:         /blog/2016/06/23/postgresql主从配置
#+KEYWORDS:    postgresql,psql,pgsql
#+TAGS:        DataBase
#+LANGUAGE:    en
#+OPTIONS:     H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: postgresql


* PostgreSql主从配置
** PostgreSql安装：
  1. 导入PostgreSql 9.5 源
  #+BEGIN_SRC shell
  $rpm -Uvh http://yum.postgresql.org/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-2.noarch.rpm
  #+END_SRC

  2. 安装Postgresql
  #+BEGIN_SRC shell
  $yum install postgresql95-server postgresql95 # 这里一般是会安装最新的9.5稳定版，如果用到Postgresql插件，需要安装扩展，建议安装方式： yum install postgresql95*
  #+END_SRC

  3. 初始化目录结构
  #+BEGIN_SRC sh
  $/usr/pgsql-9.5/bin/postgresql95-setup initdb #这里是Centos7 的目录位置
  #+END_SRC

  4. 启动（这个可以在后面的主从配置完成之后进行启动）
  #+BEGIN_SRC sh
  $service  postgresql-9.5 start
  $chkconfig postgresql-9.5 on #设置开机启动
  #+END_SRC

** PostgreSql 主从配置意义：
 1. 主从配置能够在一台主机宕机的情况下立马切换到另外一台主机上，减少损失

 2. 主从配置能够在读写分离，减轻数据库的压力,主库进行写，从库进行读。

 3. 主从配置能够保证多数据库中的数据一致性。

** 主从配置流程：
   注意：这里使用的是Postgresql 9.5.3进行。由于Postgresql版本之间会有细微的差别。


*** 
Master 配置：
1. 配置:postgresql.conf 文件
#+BEGIN_SRC sh
listen_addresses = '*'          # what IP address(es) to listen on;
wal_level = hot_standby         # wal 日志的级别
max_wal_senders = 5             # 控制主库最多可以有多少个并发的standby数据库；
wal_keep_segments = 64          # 16M为单位，wal日志生成的单位，尽量的设置较大，防止日志没有来得及到standby就被循环覆盖了，这个如果数据量大的时候要慎重。
synchronous_standby_names = '*' #synchronous_standby_names 这个参数对应着slave配置文件中的recovery.conf 中的primary_conninfo
#+END_SRC

2. 配置:pg_hba.conf文件(这个文件主要是用来配置数据库连接权限的)
#+BEGIN_SRC shell
# local      DATABASE  USER  METHOD  [OPTIONS]
# host       DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
# hostssl    DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
# hostnossl  DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
#第一列是指定能够连接数据库的类型，local是本地连接，host是远程的主机。
#第二列是指能够连接那些数据库
#第三列是哪个用户能够连接数据库
#第四列是地址
#第五列是认证的方式
local   all             postgres                                trust
local   all             all                                     peer
host    all             all             0.0.0.0/0               md5
host    replication     all             0.0.0.0/0               trust
host    all             all             ::1/128                 md5
#+END_SRC

配置说明：
1. 允许本地的postgres连接
2. 允许所有的本地连接认证方式是获取本地的操作系统的用户名。

*** Slave 配置：
1.配置:postgresql.conf 文件
#+BEGIN_SRC shell
listen_addresses = '*'          # what IP address(es) to listen on;
wal_level = hot_standby
max_connections = 1000
hot_standby = on
hot_standby_feedback = on
#+END_SRC

2. 配置:pg_hba.conf文件(这个文件主要是用来配置数据库连接权限的)
#+BEGIN_SRC shell
local   all             postgres                                trust
local   all             all                                     peer
host    all             all             0.0.0.0/0               md5
host    replication     all             0.0.0.0/0               trust
host    all             all             ::1/128                 md5
#+END_SRC

3. 配置: recovery.conf文件

#+BEGIN_SRC shell
primary_conninfo = 'host=x.x.x.x user=test password=123 port=5432'
EOF
#+END_SRC




** 过程如下：
*** Master
1. 启动Mater节点（没有任何的主从配置过程）

2. 修改postgres的密码, 创建主从同步需要的账号

#+BEGIN_SRC sh
su postgres
psql -c "ALTER USER postgres WITH PASSWORD '123';"
psql -c " CREATE ROLE repluser REPLICATION LOGIN PASSWORD '123';"
#+END_SRC

4. 然后修改配置成如上的配置。

5.重启Master

6.Master打开备份状态：
#+BEGIN_SRC sh
psql -U postgres -c "select pg_start_backup('initial_backup');"
#+END_SRC

7.将内容拷贝到远程的slave节点
#+BEGIN_SRC shell
rsync -cva --inplace --exclude=*pg_xlog* /var/lib/pgsql/9.5/data/ slave_ipaddress:/var/lib/pgsql/9.5/data/
#+END_SRC

8.退出备份状态
#+BEGIN_SRC shell
psql -U postgres -c "select pg_stop_backup();"
#+END_SRC

*** Slave
1. 修改成如上的slave配置

2. 注意一下/var/lib/pgsql/9.5/data/目录的权限问题，尤其是recovery.conf
#+BEGIN_SRC shell
chown -R postgres.postgres /var/lib/pgsql/9.5/data/
#+END_SRC

**** 检验方式：
#+BEGIN_SRC sh
#zai
select * from pg_stat_replication;
#+END_SRC
可以从输出的信息中看到是否同步成功。










